Blendr Project Guidelines

1. Purpose:
   - Aggregate content from YouTube and Reddit based on user searches
   - Allow users to save and manage favorite content

2. Features:
   - Search functionality for YouTube videos and Reddit threads
   - Display results with thumbnails and publication dates
   - Sort results by relevance or date
   - User authentication (login/logout)
   - Save and manage favorite content
   - Responsive design for various screen sizes
   - Consistent layout across different zoom levels
   - Mobile-friendly interface

3. Technical Requirements:
   - Frontend: HTML, CSS, and vanilla JavaScript (no frameworks)
   - Backend: Node.js with Express.js
   - APIs: YouTube Data API, Reddit JSON API (client-side)
   - Deployment: Heroku

4. User Interface:
   - Clean and intuitive design
   - Clear separation between YouTube and Reddit results
   - Easy-to-use favorites management
   - Responsive layout for desktop and mobile devices
   - Consistent alignment of "Add to Favorites" buttons
   - Compact display for Reddit threads

5. Functionality:
   - Enter key support for search and login actions
   - Placeholder text in search box and result areas
   - Login prompt for saving favorites
   - Touch-friendly interactions for mobile devices

6. Performance:
   - Optimize API calls to minimize load times
   - Implement efficient client-side rendering of results

7. Testing:
   - Conduct thorough testing of all features
   - Ensure cross-browser compatibility
   - Test responsiveness on various devices and zoom levels

8. Documentation:
   - Maintain up-to-date README with setup instructions
   - Document any known issues or limitations
   - Keep a log of major changes and bug fixes

9. Continuous Improvement:
   - Regularly review and refactor code for better performance and maintainability
   - Stay updated with API changes and adjust accordingly
   - Consider user feedback for future enhancements

10. Deployment and Troubleshooting:
   - Use Heroku for deployment
   - The app will use Heroku-24 stack on the next deployment
   - Ensure Node.js version in package.json is set to a current LTS version (e.g., "18.x")
   - If deployment fails:
     a. Delete node_modules and package-lock.json
     b. Clear npm cache
     c. Reinstall dependencies
     d. Commit changes and redeploy
   - Keep track of deployment issues and resolutions in error_log.txt

Deployment:
- The app is deployed on Heroku
- The app URL includes a unique identifier assigned by Heroku: https://blendr-4c514d99c8e5.herokuapp.com/
- This identifier ensures a unique URL for the app and cannot be removed
